#include <bits/stdc++.h>
using namespace std;
class Solution{
    //Function to find the leaders in the array.
    public:
    vector<int> leaders(int a[], int n){
        // Code here
        vector <int > leader;
        int maxSoFar ;
        for (int i= n-1; i>=0; i--)
        {
            if (i ==n-1)
            {
                maxSoFar = a[i];
                leader.push_back(maxSoFar);
                
            }
            else if (a[i] >= maxSoFar)
            {
                maxSoFar = a[i];
                leader.push_back(maxSoFar);
            }
        }
        reverse(leader.begin(), leader.end());
       return leader;
    }
};

int main()
{
   long long t;
   cin >> t;//testcases
   while (t--)
   {
       long long n;
       cin >> n;//total size of array
        
        int a[n];
        
        //inserting elements in the array
        for(long long i =0;i<n;i++){
            cin >> a[i];
        }
        Solution obj;
        //calling leaders() function
        vector<int> v = obj.leaders(a, n);
        
        //printing elements of the vector
        for(auto it = v.begin();it!=v.end();it++){
            cout << *it << " ";
        }
        
        cout << endl;

   }
}
